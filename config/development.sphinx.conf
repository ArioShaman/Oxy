
indexer
{
  mem_limit = 256M
}

searchd
{
  listen = 127.0.0.1:9421:mysql41
  log = /home/danuser/ruby_tests/oxy/log/development.searchd.log
  query_log = /home/danuser/ruby_tests/oxy/log/development.searchd.query.log
  pid_file = /home/danuser/ruby_tests/oxy/log/development.sphinx.pid
  max_matches = 100000
  workers = threads
  binlog_path = /home/danuser/ruby_tests/oxy/tmp/binlog/development
}

source article_core_0
{
  type = pgsql
  sql_host = localhost
  sql_user = postgres
  sql_pass = postgres
  sql_db = newspap_bd
  sql_port = 5432
  sql_query_pre = SET TIME ZONE UTC
  sql_query_pre = UPDATE "articles" SET "delta" = FALSE WHERE "delta" = TRUE
  sql_query = SELECT "articles"."id" * 3 + 0 AS "id", "articles"."title" AS "title", "articles"."content" AS "content", "articles"."description" AS "description", "articles"."id" AS "sphinx_internal_id", 'Article' AS "sphinx_internal_class", 0 AS "sphinx_deleted", extract(epoch from "articles"."created_at")::int AS "created_at" FROM "articles" WHERE ("articles"."id" BETWEEN $start AND $end) GROUP BY "articles"."id", "articles"."title", "articles"."content", "articles"."description", "articles"."id", "articles"."created_at"
  sql_query_range = SELECT COALESCE(MIN("articles"."id"), 1), COALESCE(MAX("articles"."id"), 1) FROM "articles"
  sql_attr_uint = sphinx_internal_id
  sql_attr_uint = sphinx_deleted
  sql_attr_timestamp = created_at
  sql_attr_string = sphinx_internal_class
}

index article_core
{
  type = plain
  path = /home/danuser/ruby_tests/oxy/db/sphinx/development/article_core
  docinfo = extern
  morphology = stem_enru
  min_word_len = 3
  charset_type = utf-8
  charset_table = 0..9, A..Z->a..z, _, a..z, U+410..U+42F->U+430..U+44F, U+430..U+44F, U+401->U+0435, U+451->U+0435
  min_infix_len = 3
  enable_star = 1
  expand_keywords = 1
  index_exact_words = 1
  source = article_core_0
}

source article_delta_0
{
  type = pgsql
  sql_host = localhost
  sql_user = postgres
  sql_pass = postgres
  sql_db = newspap_bd
  sql_port = 5432
  sql_query_pre = SET TIME ZONE UTC
  sql_query = SELECT "articles"."id" * 3 + 0 AS "id", "articles"."title" AS "title", "articles"."content" AS "content", "articles"."description" AS "description", "articles"."id" AS "sphinx_internal_id", 'Article' AS "sphinx_internal_class", 0 AS "sphinx_deleted", extract(epoch from "articles"."created_at")::int AS "created_at" FROM "articles" WHERE ("articles"."delta" = TRUE AND "articles"."id" BETWEEN $start AND $end) GROUP BY "articles"."id", "articles"."title", "articles"."content", "articles"."description", "articles"."id", "articles"."created_at"
  sql_query_range = SELECT COALESCE(MIN("articles"."id"), 1), COALESCE(MAX("articles"."id"), 1) FROM "articles" WHERE ("articles"."delta" = TRUE)
  sql_attr_uint = sphinx_internal_id
  sql_attr_uint = sphinx_deleted
  sql_attr_timestamp = created_at
  sql_attr_string = sphinx_internal_class
}

index article_delta
{
  type = plain
  path = /home/danuser/ruby_tests/oxy/db/sphinx/development/article_delta
  docinfo = extern
  morphology = stem_enru
  min_word_len = 3
  charset_type = utf-8
  charset_table = 0..9, A..Z->a..z, _, a..z, U+410..U+42F->U+430..U+44F, U+430..U+44F, U+401->U+0435, U+451->U+0435
  min_infix_len = 3
  enable_star = 1
  expand_keywords = 1
  index_exact_words = 1
  source = article_delta_0
}

index article
{
  type = distributed
  local = article_core
  local = article_delta
}
